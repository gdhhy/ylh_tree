<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zcreate.tree.dao.MemberMapper">
    <cache eviction="LRU" readOnly="true" flushInterval="86400000" size="10000"/>
    <resultMap id="UserResult" type="com.zcreate.tree.pojo.Member">
        <result column="member_id" jdbcType="INTEGER" property="memberId"/>
        <result column="member_no" jdbcType="VARCHAR" property="memberNo"/>
        <result column="user_name" jdbcType="VARCHAR" property="username"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="id_card" jdbcType="VARCHAR" property="idCard"/>
        <result column="member_info" jdbcType="VARCHAR" property="memberInfo"/>
        <result column="parent_no" jdbcType="VARCHAR" property="parentNo"/>
        <result column="cur_level" jdbcType="INTEGER" property="curLevel"/>
        <result column="child_total" jdbcType="INTEGER" property="childTotal"/>
        <result column="child_depth" jdbcType="INTEGER" property="childDepth"/>
        <result column="direct_count" jdbcType="INTEGER" property="directCount"/>
    </resultMap>
    <sql id="queryWhere">
        <where>
            <if test="param.memberNo!=null">AND member_no = #{param.memberNo:VARCHAR}</if>
            <if test="@com.zcreate.Ognl@isNotEmpty(param.memberNos)">
                AND member_no in
                <foreach item="item" index="index" collection="param.memberNos"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="param.username!=null">AND user_name = #{param.username:VARCHAR}</if>
            <if test="param.realName!=null">AND real_name = #{param.realName:VARCHAR}</if>
            <if test="param.phone!=null">AND phone = #{param.phone:VARCHAR}</if>
            <if test="param.idCard!=null">AND id_card = #{param.idCard:VARCHAR}</if>
            <if test="param.parentNo!=null">AND parent_no = #{param.parentNo:INTEGER}</if>
            <if test="param.threeThirty==true">AND cur_level>2 and child_total>=30</if>
        </where>
    </sql>
    <select id="getMemberCount" resultType="int" parameterType="java.util.Map" useCache="true">
        SELECT count(*) FROM member_v4
        <include refid="queryWhere"/>
    </select>
    <select id="selectMember" resultMap="UserResult" parameterType="java.util.Map" useCache="true">
        SELECT
        member_id, member_no, user_name,real_name, id_card, phone, member_info, parent_no, cur_level, child_total, child_depth, direct_count
        FROM member_v4
        <include refid="queryWhere"/>
        <if test="@com.zcreate.Ognl@isNotEmpty(param.orderBy)">order by ${param.orderBy}</if>
        <choose>
            <when test="param.start>0 and param.length >0">
                limit #{param.start:INTEGER},#{param.length:INTEGER}
            </when>
            <when test="param.length >0">
                limit #{param.length:INTEGER}
            </when>
            <otherwise>
                limit 1000
            </otherwise>
        </choose>
    </select>
    <select id="selectOffline" resultType="java.util.Map" parameterType="java.util.List" useCache="true">
        select offline_id,ordersn,buyer_id,seller_id,memo,FROM_UNIXTIME(trade_time)trade_time,money,ver from order_offline
        <where>
            offline_id in
            <foreach item="item" collection="list" separator="," open="(" close=")">
                #{item}
            </foreach>
        </where>
    </select>
    <select id="selectOfflineID" resultType="int" parameterType="java.util.Map" useCache="true">
        select offline_id from order_offline
        <where>
            <if test="param.upMoney!=null">AND money &lt; #{param.upMoney:DOUBLE}</if>
        </where>
        order by offline_id asc limit 1;
    </select>
    <select id="selectOfflineCount" resultType="int" useCache="true">
        select count(*)
        from order_offline
    </select>

    <select id="getMember" resultMap="UserResult" parameterType="java.util.Map" useCache="true">
        SELECT
        member_id, member_no, user_name,real_name, id_card, phone, member_info, parent_no, cur_level, child_total, child_depth, direct_count
        FROM member_v4
        <include refid="queryWhere"/>
        limit 1
    </select>
    <select id="selectParent" resultType="java.util.Map" parameterType="java.util.Map" statementType="CALLABLE">
        call findParent(#{param.username,jdbcType=VARCHAR,mode=IN}, #{param.maxlevel,jdbcType=INTEGER,mode=IN})
    </select>
</mapper>